DROP TABLE votes IF EXISTS;
DROP TABLE user_roles IF EXISTS;
DROP TABLE dishes IF EXISTS;
DROP TABLE users IF EXISTS;
DROP TABLE restaurants IF EXISTS;
DROP SEQUENCE global_seq IF EXISTS;

CREATE SEQUENCE global_seq AS BIGINT START WITH 100000;

CREATE TABLE users
(
    id         BIGINT GENERATED BY DEFAULT AS SEQUENCE global_seq PRIMARY KEY,
    name       VARCHAR(45)             NOT NULL,
    email      VARCHAR(90)             NOT NULL,
    password   VARCHAR(45)             NOT NULL,
    registered TIMESTAMP DEFAULT now() NOT NULL,
    enabled    BOOLEAN   DEFAULT TRUE  NOT NULL
);
CREATE UNIQUE INDEX user_email_idx ON users (email);

CREATE TABLE user_roles
(
    user_id BIGINT      NOT NULL,
    role    VARCHAR(45) NOT NULL,
    CONSTRAINT user_roles_idx UNIQUE (user_id, role),
    FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE restaurants
(
    id          BIGINT GENERATED BY DEFAULT AS SEQUENCE global_seq PRIMARY KEY,
    name        VARCHAR(90)  NOT NULL,
    description VARCHAR(255) NOT NULL
);
CREATE UNIQUE INDEX restaurants_name_idx ON restaurants (name);

CREATE TABLE dishes
(
    id            BIGINT GENERATED BY DEFAULT AS SEQUENCE global_seq PRIMARY KEY,
    date          DATE        NOT NULL,
    name          VARCHAR(90) NOT NULL,
    price         DOUBLE      NOT NULL,
    restaurant_id BIGINT      NOT NULL,
    FOREIGN KEY (restaurant_id) REFERENCES restaurants (id)
);
CREATE INDEX dishes_date_rest_idx ON dishes (date, restaurant_id);
CREATE UNIQUE INDEX  dishes_unique_rest_date_name_idx ON dishes (date, restaurant_id, name);

CREATE TABLE votes
(
    id            BIGINT GENERATED BY DEFAULT AS SEQUENCE global_seq PRIMARY KEY,
    date          DATE   NOT NULL,
    user_id       BIGINT NOT NULL,
    restaurant_id BIGINT NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users (id),
    FOREIGN KEY (restaurant_id) REFERENCES restaurants (id)
);
CREATE UNIQUE INDEX votes_unique_user_date_idx ON votes (date, user_id);
